<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0 shrink-to-fit=no">
	<link rel="shortcut icon" href="/img/hostel.png" type="image/x-icon">
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
  <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
  
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.0/dist/sweetalert2.min.css">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.css">
	<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.0/dist/sweetalert2.min.js"></script>



	<!-- Bootstrap link -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">

	<link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">


	<link href="https://unpkg.com/boxicons@2.1.2/css/boxicons.min.css" rel="stylesheet" />

	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.3/css/all.css"
		integrity="sha384-HSZ7Ld1Gg5+8oWchX9zv5V5jLQQaQ8VwW5PD5D59pZa0TKOkuL8Jm9zvNSm7gJcu" crossorigin="anonymous">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css">
	<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
	<link rel="stylesheet" href="https://cdn.bx.io/boxicons/4.0.0/css/boxicons.min.css">
	<link rel="stylesheet"
		href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" />
	<link rel="stylesheet" type="text/css" href="path/to/helvetica-font-file.ttf">
	<link rel="stylesheet" href="/css/student.css">
	<link rel="stylesheet" href="/css/swal.css">

	<style>
	nav .profile .profile-link {
	  box-shadow: 0px 3px 10px #cfcfcf;
	  position: absolute;
	  top: calc(100% + 10px);
	  right: 1.1rem;
	  background: var(--light);
	  border-radius: 5px;
	  width: 230px;
	  opacity: 0;
	  pointer-events: none;
	  transition: left 0.5s ease;

	}
	nav .dropdown-divider {
	  width: 90%;
	}
	nav .dropdown-header {
	  margin-left: -1rem;
	}
	nav .profile .profile-link.show {
	  opacity: 1;
	  pointer-events: visible;
	  top: 100%;
	}
	nav .profile .profile-link a {
	  padding: 10px 16px;
	  display: flex;
	  grid-gap: 10px;
	  font-size: 14px;
	  border-radius: 10px 0 10px 0;
	  color: #4f4f4f;
	  align-items: left;
	  margin-left:-1rem;
	  /* transition: all 0.3s ease; */
	  opacity: 90%;
	}
	nav .profile .profile-link a:hover {
	  background: #ff4a131e;
	  color: #ff4b13;
	}

		button:focus {
  outline: none;
}
#loader-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #ffffff;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

#loader {
  border: 4px solid #ff4b13;
  border-top: 4px solid transparent;
  border-radius: 50%;
  width: 50px;
  height: 50px;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

#loader-text {
  margin-top: 10px;
  color: #ff4b13;
  font-weight: bold;
}
.error {
      border-radius: 5px;
      margin-top: 15px;
      width: 390px;
      color: rgba(255, 0, 0, 0.711);
    }
	.swal2-popup .swal2-styled.swal2-cancel {
      border: 1px solid #ff4b13;
			color:#ff4b13;
			padding-right:2rem;
			padding-left:2rem; /* Set the border properties as per your requirement */
			margin-bottom:2rem;
    }
	.swal2-popup .swal2-styled.swal2-confirm:hover, .swal2-popup .swal2-styled.swal2-confirm:focus{
	color:#fff;
		background:#ff4b13;
		outline:#ff4b13;
	}
	.swal2-popup .swal2-styled.swal2-cancel:hover, .swal2-popup .swal2-styled.swal2-cancel:focus{
	background:#fff;
	}
		.swal2-popup .swal2-styled.swal2-confirm {
					padding-right:2rem;
					padding-left:2rem;
					margin-bottom:2rem;
		    }
			.disabled {
			opacity: 0.6; /* Decrease opacity to indicate it is disabled */
			pointer-events: none; /* Disable pointer events to prevent interaction */
			/* Add any other desired styles to visually indicate the button is disabled */
			}
			.remark-class {
			color: 4f4f4f;
			background: #ffffff;
			z-index: 1;
			margin-left: 1.4rem;
			margin-top: -.5rem;
			font-size: 14px;
			position: absolute;
			color: #4f4f4f;
			width: 80px;
			text-align: center;

		}

		.reason-bx {
			border-radius: 5px;
			padding: 1rem;
			border-color: #4f4f4f;
			text-align: left;
			font-size: 14px;
			opacity: 90%;
			border: 1px solid #4f4f4f;
		}

	</style>
	<title>Home</title>
</head>

<body>
	<div id="loader-container">
		<div id="loader"></div>
		<div id="loader-text">Loading... <span id="loader-percentage">0%</span></div>
	  </div>
	<!-- NAVBAR -->
	<section id="content">
		<!-- NAVBAR -->
		<nav>
			<div>
				<div>
					<a href="#" class="brand" style="position:absolute;"><img src="/img/hostel.png" alt=""
							style="width:48px; margin-left:.8rem; margin-top:33px;"></a>

				</div>
			</div>

			<div class="profile">
				<div class="pro">
					<!-- <img src="https://drive.google.com/uc?id=<%= userdata.photo %>" class="img1 mt-2"> -->
					<img src="https://drive.google.com/uc?id=1KifybWk3-v7-n8TfNzMtPKffscGCbf44">

					<i class='bx bx-cog iconn'></i>
				</div>
				<ul class="profile-link">
					<div class="p-3">

						<h6 class="dropdown-header font-weight-bold text-left" style="color:#ff4b13; opacity:90%;">Hi,
            <%= userdata.name %>
            </h6>
						<div class="dropdown-divider d-flex align-items-center justify-content-center"></div>
						<div class="pl-4">
							<a href="#" id="logout-link" class="dropdown-item"><i class="fas fa-sign-out-alt fa-lg fa-fw mr-2"
									style=" color: #FF4B13;"></i>Log Out</a>
						</div>

					</div>
				</ul>
			</div>
		</nav>
		<!-- NAVBAR -->

		<% if(userdata) { %>
		<main>
			<main id="block">
				<div class="row con">
					<div class="col-lg-12 col-md-12 col-sm-12">
						<div class="shadow-box">
							<% const firstName = userdata.name.split(' ')[0]; %>
							<p class="welcome ml-4 pb-1 pt-4 wek"> Welcome <%= firstName %>!
							</p>
							<p class="nice-day ml-4 pb-1 position-absolute">Have a nice day
							</p>
							<% var isSidAllocated = false; %>
									<% for (var j = 0; j < allocate.length; j++) { %>
									<% if (allocate[j].sid == userdata.sid) { %>
										<% isSidAllocated = true; %>
										<% break; %>
									<% } %>
									<% } %>

									

							<button class="buttonnn add <%= isSidAllocated ? '' : 'disabled' %>" <%= isSidAllocated ? '' : 'disabled' %> data-id="<%= userdata.sid %>"><%= isSidAllocated ? 'Room change' : 'Room change' %></button>
						</div>
					</div>

					

					<div class="col-lg-4 col-md-6 col-sm-12">
						<div class="my-proDetails row pt-5">
							<div class="col-md-12 img1a">
								<!-- <img src="https://drive.google.com/uc?id=<%= userdata.photo %>" class="img1 mt-2"> -->
								<img src="https://drive.google.com/uc?id=<%= userdata.photo %>" class="img1 mt-2">
							</div>
							<div class="col-md-12 text-center">
								<b class="dee position-relative">
									<%= userdata.name %> <br>
								</b>
								<div class="profile-details text-center pt-3">
									<% const x = userdata.year_enrolled 
										const date = new Date(x)
										const year = date.getFullYear()

										const curryear  = new Date().getFullYear()
									%> 
									<span class="de">Year: <%= curryear -  year  %></span> <br>								
									<span class="de"><a><%= userdata.email %></a></span><br>
									<span class="de"> <%= userdata.specializationid === 1 ? "FullStack" :
										userdata.specializationid === 2 ? "BlockChain" :
										userdata.specializationid === 3 ? "FullStack" : "" %> </span> <br>

									<% for (var i = 0; i < room.length; i++) { %>
										<% for (var j = 0; j < allocate.length; j++) { %>
											<% if (room[i]._id === allocate[j].roomid && allocate[j].sid == userdata.sid) { %>
											<button disabled class="butt1"><span>Room <%= room[i].room_name%></span></button>
											<button disabled class="butt2"><span>Block <%= allocate[j].block_name %></span></button>
											<% } %>
										
											<% } %>
									<% } %>
								</div>
							</div>
						</div>
					</div>

					<div class="col-lg-8 col-md-6 col-sm-12 ">
						<div class="my-box1  pl-5 pr-5 proo " >
							<p class="roommate mt-4 font-weight-bold"> Roommate details</p>
							<div class="table-responsive">
								<table class="table">
									<thead>
									<tr>
										<th scope="col">SI.No</th>
										<th scope="col">Name</th>
										<th scope="col">Course</th>
										<th scope="col">Year</th>
										<th scope="col">Email</th>
									</tr>
									</thead>
			  <% if(roommate) { %>
				<% if(roommate.length > 0) { %>
									<tbody>
				<% for(var j = 0; j < roommate.length; j++) { %>
									<tr>
										<th scope="row"><%= j+1 %></th>
										<td><%= roommate[j].student_name %></td>
										<td><%= roommate[j].course %></td>
										<td>IV</td>
										<td><%= roommate[j].sid %>.gcit@rub.edu.bt</td>
									</tr>
									<% } %>
									</tbody>
				<% } else { %>
					<tr>
						<th scope="row" colspan="5" style="text-align: center;" >No Room Mate </th>
					
					</tr>
					
					</tbody>
				<% } %>
			  <% } else { %>
				<tr>
					<th scope="row" colspan="5" style="text-align: center;" >No Allocation for current year</th>
				
				</tr>
				
				</tbody>
			<% } %>
								</table>
							</div>
						</div>
					</div>


					<div class="col-lg-12 pt-4 col-md-12 col-sm-12">
						<div class="shadow-box1">
							<div class="pl-5 pr-5 pb-5 pt-1">
								<p class="roommate font-weight-bold">Your room change request</p>
								<% if (request.length > 0) { %>
								
								<div class="table-responsive  d-flex">
									<table class="tabe text-center align-items-center  justify-content-center">
										<thead>
											<tr>
												<th scope="col">Date</th>
												<th scope="col">From</th>
												<th scope="col">To</th>
												<th scope="col"  style="width: 600px;">Attachment</th>
												<th scope="col">Reason</th>
												<th scope="col">Status</th>
											
												<th scope="col">Remarks</th>
												
											</tr>
										</thead>

										<tbody>
											<% for(var i =0; i < request.length; i++) { %>
											<tr style="height: 50px">
												<td>
													<%= request[i].Requested %>
												</td>
												<td>
													<% for(var j=0; j < room.length; j++) { %>
													
														<% if(room[j]._id == request[i].room) { %>
															<%= room[j].room_name %>
														<% }%>
													<% } %>
												</td>
												<td>
													<% for(var j=0; j < room.length; j++) { %>
														<% if(room[j]._id == request[i].targetroom) { %>
															<%= room[j].room_name %>
														<% }%>
													<% } %>
												</td>
												<td><a class="picture" target="_blank" href="https://drive.google.com/uc?id=<%= request[i].image %>" style="cursor: pointer; display: inline-block;"><p style="display: inline;">Attached File :</p><i class='bx bxs-file-blank' style="font-size: 24px; color: #ff4b13; display: inline;"></i></a></td>

												<td class="fixed-width text-left">
													<p><%= request[i].reason %></p>
												</td>
												<td>
													<div class="acc-status ml-1 d-flex" style="background:
													<% if (request[i].status === 'pending') { %>#ffb300<% } %>
													<% if (request[i].status === 'Rejected') { %>#ff0000<% } %>
													<% if (request[i].status === 'accepted') { %>#00bb22<% } %>;
												  ">
														<!-- ff0000  red
														00bb22 green-->
													</div>
													<p class="ml-4 stat-text"><%= request[i].status %></p>
													<!-- <button
														class="buttonn justify-content-center align-items-center">Pending</button> -->
												</td>
												<td>
													
														<p class="mt-2" id="view">View</p>
												
												</td>
											</tr>

										</tbody>

									</table>
								</div>
								<% } %>
								<% } else { %>
									<h6 class="text-center">No Request<h6>
								<% } %>

							</div>
						</div>
					</div>
			</main>
		</main>
		<% } %>
		<div class="footer pt-3">
			<footer>
				<p class="pt-1 mt-2 pb-2"><i>Copyright©2023 | Hostel Allocation System</i></p>
			</footer>
		</div>

	</section>


	<script>
	  function setFocus(on) {
	    var element = document.activeElement;
	    if (on) {
	      setTimeout(function () {
	        element.parentNode.classList.add("focus");
	      });
	    } else {
	      let box = document.querySelector(".input-box");
	      box.classList.remove("focus");
	      $("input").each(function () {
	        var $input = $(this);
	        var $parent = $input.closest(".input-box");
	        if ($input.val()) $parent.addClass("focus");
	        else $parent.removeClass("focus");
	      });
	    }
	  }

	  document.onreadystatechange = function () {
	    var loaderContainer = document.getElementById("loader-container");
	    var loaderPercentage = document.getElementById("loader-percentage");

	    if (document.readyState === "complete") {
	      loaderContainer.style.display = "none";
	    } else {
	      loaderContainer.style.display = "flex";
	    }
	  };

	  window.addEventListener("load", function () {
	    var loaderPercentage = document.getElementById("loader-percentage");
	    var currentPercentage = 0;
	    var interval = setInterval(function () {
	      currentPercentage++;
	      loaderPercentage.innerText = currentPercentage + "%";
	      if (currentPercentage === 100) {
	        clearInterval(interval);
	      }
	    }, 50);
	  });
	</script>
	<script>
		document.addEventListener("DOMContentLoaded", function() {
// Add event listener to the logout link
document.getElementById("logout-link").addEventListener("click", function(e) {
	e.preventDefault(); // Prevent the default link behavior

	// Send fetch request to log out or redirect to the logout route
	fetch("/logout", {
		method: "GET",
		credentials: "same-origin"
	})
		.then(response => {
			if (response.ok) {
				// Handle success response, such as redirecting to the login page
				window.location.href = "/login";
			} else {
				// Handle error, display error message, or take appropriate action
				throw new Error("Error logging out");
			}
		})
		.catch(error => {
			// Handle error, display error message, or take appropriate action
			console.error("Error logging out:", error);
		});
});
});

	</script>

	<script>
		$(document).ready(function() {

		$(".add").click(function() {
			var id = $(this).attr("data-id");
			console.log(id);
    // Show confirmation message using SweetAlert2
    Swal.fire({
        html: `
				<h5 class="mt-4 pb-3 font-weight-bold" style="color:#ff4b13; opacity:90%;">Hostel Change Request</h5>
								<form enctype="multipart/form-data">
									<div class="form-group">
										<div class="input-box active-grey">
											<label class="input-label">Block Name</label>
											<select class="input-1" onfocus="setFocus(true)" onblur="setFocus(false)" id="block-type" required  onchange="myFunction()"style="color:#4f4f4f; border-color:#4f4f4f; font-size:16px;" >
												<option value="" disabled selected>Select Block</option>
												<% for(var j = 0; j < block.length; j++) { %>
													<%
													var room = userdata.gender === 'F' ? 'girls' : 'boys';
													if(block[j].type === room && block[j].status === "available") { %>
														<% if (block[j].no_of_rooms !== 0) { %>
															<option value="<%= block[j]._id %>">block <%= block[j].block_name %></option>
														<% } %>
													<% } %>
												<% } %>
											</select>
										</div>

										<div class="input-box">
											<label class="input-label" >Room</label>
												<select class="input-1" onfocus="setFocus(true)" onblur="setFocus(false)" required id="room-select" style="color:#4f4f4f; border-color:#4f4f4f; font-size:16px;">
												</select>
										</div>


										<div class="input-box">
												<label class="input-label">Reason</label>
												<textarea type="text" class="input-1" onfocus="setFocus(true)"  style="height: 100px; color:#4f4f4f; border-color:#4f4f4f; font-size:16px;" id="reason" onblur="setFocus(false)" required ></textarea>
										</div>

												<div class="input-box active-grey">
														<label class="input-label">Supporting Documents</label>
														<input type="file" name="filename" multiple class="input-1" onfocus="setFocus(true)" style="height: 100px; color:#4f4f4f; border-color:#4f4f4f; font-size:16px;" id="file" onblur="setFocus(false)" required />

												</div>
										</div>
								</form>
				`,
				showCancelButton: true,
				showConfirmButton: true,
				confirmButtonColor: "#ff4b13",
				cancelButtonColor: "#fff",
				confirmButtonText: "Create",
				preConfirm: () => {
					// Retrieve the values of the input fields
					const targetBlock = document.getElementById('block-type').value;
					const targetRoom = document.getElementById('room-select').value;
					const reason = document.getElementById('reason').value;
					const fileName  = document.getElementById('file');
					const selectedfile = fileName.files[0]


					const formData = new FormData();
					formData.append("targetBlock", targetBlock);
					formData.append("targetRoom", targetRoom);
					formData.append("reason", reason);
    				formData.append("filename", selectedfile);

					return formData
				}
    }).then((result) => {
		console.log("confirm result")

        if (result.isConfirmed) {
            // Send AJAX request to delete block

						const formData = result.value;
						fetch(`/students/changeroom/${id}`, {
						method: 'POST',
						body: formData
						})
						.then(response => {
							if (!response.ok) {
								console.log("response", response)
							throw new Error(response);
							}
							Toastify({
							text: 'Successfully send the request!',
							backgroundColor: '#96c93d',
							className: 'success',
							position: 'top-center',
							}).showToast();
							window.location.reload();
						})
						.catch(error => {
							console.error(error);
							Toastify({
							text: 'It seems you already have request for current semester' || error,
							backgroundColor: 'rgba(255,0,0,0.3)',
							className: 'error',
							position: 'top-center',
							}).showToast();
						});

												console.log("after ajax")

								}
							});
						});
						});

			function myFunction() {
			const x = document.getElementById("block-type").value;
			console.log(x);
      // Send AJAX request to fetch rooms for a block
      $.ajax({
        url: `/room/api/room/block/${x}`,
        method: "GET",
        success: function(response) {
			console.log(response);
          // Clear the current options in the room select element
          $("#room-select").empty();
          // Add new options to the room select element based on the response
          for (var i = 0; i < response.length; i++) {
			if(response[i].status !== "unavailable" && response[i].isDisabled === false && response[i].availability === response[i].room_capacity){
            $("#room-select").append(`<option value="${response[i]._id}">${response[i].room_name}</option>`);
			}
          }
        },
        error: function(error) {
			$("#room-select").empty();

			$("#room-select").append(`<option style="border-color: red;" value=""></option>`);
        //   If there was an error fetching the rooms, display an error message using Toastify
          Toastify({
            text: "Error fetching rooms: " + error.responseText,
            backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)",
            className: "error",
            position: "top-center"
          }).showToast();
        }
      });

	  ///////////////////////////////////////
	   $.ajax({
        url: `/room/api/room/block/${x}`,
        method: "GET",
        success: function(response) {
			console.log(response);
          // Clear the current options in the room select element
          $("#room-select").empty();
          // Add new options to the room select element based on the response
          for (var i = 0; i < response.length; i++) {
			if(response[i].status !== "unavailable" && response[i].isDisabled === false && response[i].availability === response[i].room_capacity){
            $("#room-select").append(`<option value="${response[i]._id}">${response[i].room_name}</option>`);
			}
          }
        },
        error: function(error) {
			$("#room-select").empty();

			$("#room-select").append(`<option style="border-color: red;" value=""></option>`);
        //   If there was an error fetching the rooms, display an error message using Toastify
          Toastify({
            text: "Error fetching rooms: " + error.responseText,
            backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)",
            className: "error",
            position: "top-center"
          }).showToast();
        }
      });




    }

	</script>

	<script>

		// PROFILE DROPDOWN
		const profile = document.querySelector("nav .profile");
		const imgProfile = profile.querySelector(".iconn");
		const dropdownProfile = profile.querySelector(".profile-link");

		imgProfile.addEventListener("click", function () {
		dropdownProfile.classList.toggle("show");
		});

	</script>

<script>
	document.addEventListener("DOMContentLoaded", function () {
	var loaderPercentage = document.getElementById("loader-percentage");

	// Update the loading percentage
	function updateLoaderPercentage(percentage) {
	  loaderPercentage.textContent = percentage + "%";
	}

	// Hide the loader when the page finishes loading
	window.addEventListener("load", function () {
	  document.getElementById("loader-container").style.display = "none";
	});

	// Track page load progress
	var totalPageResources = 0;
	var loadedResources = 0;

	function incrementLoadedResources() {
	  loadedResources++;
	  var percentage = Math.floor((loadedResources / totalPageResources) * 100);
	  updateLoaderPercentage(percentage);
	}

	// Count the number of page resources (e.g., images, scripts, stylesheets)
	var pageResources = document.querySelectorAll("img, script, link[rel='stylesheet']");
	totalPageResources = pageResources.length;

	// Increment the loaded resources counter when a resource finishes loading
	pageResources.forEach(function (resource) {
	  if (resource.complete) {
		incrementLoadedResources();
	  } else {
		resource.addEventListener("load", incrementLoadedResources);
		resource.addEventListener("error", incrementLoadedResources);
	  }
	});
  });


  </script>
  <script>
	$(document).ready(function () {
		$("#view").click(function () {
			console.log("clicked")
			// Show confirmation message using SweetAlert2
			Swal.fire({
				html: `
					<h5 class="mt-4 pb-3 font-weight-bold" style="color:#ff4b13; opacity:90%; ">
						<% for(var i=0; i < request.length; i++) { %>
							Status: <%= request[i].status %>
						<% } %>
					</h5>
									<form>	<p class="text-center remark-class">Remarks</p>
											<div class="reason-bx" style="height: 100px">
												<% for(var i=0; i < request.length; i++) { %>
													<p><%= request[i].remarks %></p>
												<% } %>
											</div>
									</form>
					`,
				showCancelButton: true,
				showConfirmButton: false,
				cancelButtonColor: "#fff",
				cancelButtonText: "Okay",
				
			}).then((result) => {
				if (result.isConfirmed) {
					// Send AJAX request to delete block
					const { blockName, blockType, status } = result.value;
					console.log(blockName)
					//
					//
					$.ajax({
						url: "/api/blocks",
						method: "POST",
						data: { block_name: blockName, type: blockType, status: status },
						success: function (response) {
							// If the block was successfully updated, display a success message using Toastify and reload the page
							Toastify({
								text: 'Block created successfully',
								duration: 3000, // Display for 3 seconds
								gravity: 'top', // Display at the top of the screen
								position: 'center', // Display in the center of the screen
								backgroundColor: 'rgba(196,293,206,1)', // Set the background color to white
								className: 'toastify-success', // Add a custom CSS class for styling
								stopOnFocus: true, // Stop the countdown when the user focuses on the screen
								onClick: function () { Toastify.hideAll() } // Hide all toasts when clicked
							}).showToast();

							// Navigate to a different page after the success message is displayed
							location.reload();
						},
						error: function (error) {
							// If there was an error updating the block, display an error message using Toastify

							Toastify({
								text: 'Please enter required details!',
								duration: 3000, // Display for 3 seconds
								gravity: 'top', // Display at the top of the screen
								position: 'center',
								className: "failed", // Display in the center of the screen
								backgroundColor: 'rgba(243,209,209,1)', // Set a gradient background color
								stopOnFocus: true, // Stop the countdown when the user focuses on the screen
								onClick: function () { Toastify.hideAll() } // Hide all toasts when clicked
							}).showToast();

						}
					});

				}
			});
		});
	})

</script>

</body>

</html>
